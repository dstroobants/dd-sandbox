apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-prisma-app
  labels:
    app: mysql-prisma-app
    tags.datadoghq.com/env: dev
    tags.datadoghq.com/service: mysql-prisma-app
    tags.datadoghq.com/version: "1234"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-prisma-app
  template:
    metadata:
      annotations:
        ad.datadoghq.com/mysql.checks: |
          {
            "mysql": {
              "instances": [
                {
                  "server": "mysql-service", 
                  "username": "datadog",
                  "password": "password"
                }
              ]
            }
          }
        ad.datadoghq.com/mysql.logs: '[{"source":"mysql","service":"mysql-prisma-app"}]'
      labels:
        app: mysql-prisma-app
        tags.datadoghq.com/env: dev
        tags.datadoghq.com/service: mysql-prisma-app
        tags.datadoghq.com/version: "1234"
    spec:
      containers:
        - name: mysql
          image: mysql:9.0
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "password"
            - name: MYSQL_DATABASE
              value: "node_prisma_db"
            - name: MYSQL_USER
              value: "prisma"
            - name: MYSQL_PASSWORD
              value: "password"
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
          # Health checks
          livenessProbe:
            exec:
              command:
                - mysqladmin
                - ping
                - -h
                - localhost
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - mysqladmin
                - ping
                - -h
                - localhost
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
