services:
  test-app:
    build: .
    environment:
      - REDIS_HOST=redis-cluster-node1
      - REDIS_PORT=7000
      - DD_TRACE_ENABLED=true
      - DD_TRACE_DEBUG=false
      - DD_TRACE_STARTUP_LOGS=false
      - DD_SERVICE=redis-cluster-test
      - DD_ENV=dev
      - DD_VERSION=1.0.0
      - DD_AGENT_HOST=datadog-agent
      - DD_TRACE_AGENT_URL=http://datadog-agent:8126
      - PYTHONPATH=/app
    depends_on:
      redis-cluster-node1:
        condition: service_started
      redis-cluster-node2:
        condition: service_started
      redis-cluster-node3:
        condition: service_started
      redis-cluster-init:
        condition: service_completed_successfully
    volumes:
      - .:/app
    networks:
      - redis-cluster-network
    command: sh -c "sleep 15 && python test.py"

  # Redis Cluster setup (3 nodes minimum)
  redis-cluster-node1:
    image: redis:7-alpine
    ports:
      - "7000:7000"
      - "17000:17000"
    command: >
      redis-server --port 7000
      --cluster-enabled yes
      --cluster-config-file nodes-7000.conf
      --cluster-node-timeout 5000
      --appendonly yes
      --appendfilename appendonly-7000.aof
      --dbfilename dump-7000.rdb
    volumes:
      - redis-cluster-node1:/data
    networks:
      - redis-cluster-network

  redis-cluster-node2:
    image: redis:7-alpine
    ports:
      - "7001:7001"
      - "17001:17001"
    command: >
      redis-server --port 7001
      --cluster-enabled yes
      --cluster-config-file nodes-7001.conf
      --cluster-node-timeout 5000
      --appendonly yes
      --appendfilename appendonly-7001.aof
      --dbfilename dump-7001.rdb
    volumes:
      - redis-cluster-node2:/data
    networks:
      - redis-cluster-network

  redis-cluster-node3:
    image: redis:7-alpine
    ports:
      - "7002:7002"
      - "17002:17002"
    command: >
      redis-server --port 7002
      --cluster-enabled yes
      --cluster-config-file nodes-7002.conf
      --cluster-node-timeout 5000
      --appendonly yes
      --appendfilename appendonly-7002.aof
      --dbfilename dump-7002.rdb
    volumes:
      - redis-cluster-node3:/data
    networks:
      - redis-cluster-network

  datadog-agent:
    image: datadog/agent:latest
    ports:
      - "127.0.0.1:8126:8126/tcp"
    env_file:
      - ../../.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    environment:
      - DD_APM_ENABLED=true
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
    networks:
      - redis-cluster-network

  # Redis Cluster initialization service
  redis-cluster-init:
    image: redis:7-alpine
    depends_on:
      - redis-cluster-node1
      - redis-cluster-node2
      - redis-cluster-node3
    networks:
      - redis-cluster-network
    command: >
      sh -c "
        sleep 10 &&
        redis-cli --cluster create redis-cluster-node1:7000 redis-cluster-node2:7001 redis-cluster-node3:7002 --cluster-replicas 0 --cluster-yes
      "

volumes:
  redis-cluster-node1:
  redis-cluster-node2:
  redis-cluster-node3:

networks:
  redis-cluster-network:
    driver: bridge
