services:
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mssql
    ports:
      - 1433:1433
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Password123!
      - MSSQL_PID=Developer
    volumes:
      - ./mssql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - test_network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P Password123! -Q 'SELECT 1' -C || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s

  mssql-init:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mssql-init
    depends_on:
      mssql:
        condition: service_healthy
    volumes:
      - ./mssql/init.sql:/init.sql
    networks:
      - test_network
    command: >
      bash -c "
      echo 'Waiting for SQL Server to be ready...' &&
      sleep 10 &&
      echo 'Running initialization script...' &&
      /opt/mssql-tools18/bin/sqlcmd -S mssql -U sa -P Password123! -i /init.sql -C &&
      echo 'Database initialization completed successfully!'
      "
    restart: "no"

  dotnet-dbm:
    image: dotnet-dbm:latest
    container_name: dotnet-dbm
    environment:
      - DD_DYNAMIC_INSTRUMENTATION_ENABLED=true
      - DD_TRACE_DEBUG=true
      - DD_SERVICE=dotnet-dbm
      - DD_ENV=dev
      - DD_VERSION=1.0.0
      - DD_LOG_LEVEL=debug
      - DD_LOGS_INJECTION=false
      - DD_AGENT_HOST=datadog-agent
      - DD_AGENT_PORT=8126
      - DD_TRACE_STARTUP_LOGS=true
    depends_on:
      - mssql-init
    networks:
      - test_network

  datadog-agent:
    image: datadog/agent:latest
    ports:
      - "127.0.0.1:8126:8126/tcp"
    env_file:
      - ../../.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - ./dd-agent/etc/datadog-agent/conf.d/sqlserver.d/conf.yaml:/etc/datadog-agent/conf.d/sqlserver.d/conf.yaml
    environment:
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_DBM_PROPAGATION_MODE=full
    networks:
      - test_network

networks:
  test_network:
    driver: bridge
